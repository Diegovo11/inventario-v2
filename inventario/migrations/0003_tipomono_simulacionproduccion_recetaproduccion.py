# Generated by Django 5.1.4 on 2025-09-27 21:11

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('inventario', '0002_reabastecimiento'),
    ]

    operations = [
        migrations.CreateModel(
            name='TipoMono',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Nombre del tipo de moño (ej. Moño Básico, Moño Premium)', max_length=100, unique=True)),
                ('descripcion', models.TextField(blank=True, help_text='Descripción detallada del moño')),
                ('precio_venta_sugerido', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Precio de venta sugerido por unidad', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('tiempo_produccion_minutos', models.PositiveIntegerField(default=30, help_text='Tiempo estimado de producción en minutos')),
                ('activo', models.BooleanField(default=True, help_text='Si el tipo de moño está disponible para producción')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Tipo de Moño',
                'verbose_name_plural': 'Tipos de Moños',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='SimulacionProduccion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_simulacion', models.CharField(help_text='Nombre para identificar esta simulación', max_length=150)),
                ('cantidad_a_producir', models.PositiveIntegerField(help_text='Cantidad de moños a producir en la simulación')),
                ('precio_venta_unitario', models.DecimalField(decimal_places=2, help_text='Precio de venta por unidad para esta simulación', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('costo_total_materiales', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Costo total de todos los materiales', max_digits=12)),
                ('ingreso_total', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Ingreso total estimado', max_digits=12)),
                ('ganancia_neta', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Ganancia neta estimada', max_digits=12)),
                ('margen_porcentaje', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Margen de ganancia en porcentaje', max_digits=5)),
                ('stock_suficiente', models.BooleanField(default=True, help_text='Si hay stock suficiente para producir esta cantidad')),
                ('fecha_simulacion', models.DateTimeField(auto_now_add=True)),
                ('tipo_mono', models.ForeignKey(help_text='Tipo de moño a simular', on_delete=django.db.models.deletion.CASCADE, to='inventario.tipomono')),
            ],
            options={
                'verbose_name': 'Simulación de Producción',
                'verbose_name_plural': 'Simulaciones de Producción',
                'ordering': ['-fecha_simulacion'],
            },
        ),
        migrations.CreateModel(
            name='RecetaProduccion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad_necesaria', models.DecimalField(decimal_places=2, help_text='Cantidad del insumo necesaria para producir 1 moño', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('es_opcional', models.BooleanField(default=False, help_text='Si este insumo es opcional para la producción')),
                ('notas', models.TextField(blank=True, help_text='Notas sobre el uso de este insumo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('insumo', models.ForeignKey(help_text='Insumo/material necesario', on_delete=django.db.models.deletion.CASCADE, to='inventario.insumo')),
                ('tipo_mono', models.ForeignKey(help_text='Tipo de moño al que pertenece esta receta', on_delete=django.db.models.deletion.CASCADE, to='inventario.tipomono')),
            ],
            options={
                'verbose_name': 'Receta de Producción',
                'verbose_name_plural': 'Recetas de Producción',
                'ordering': ['tipo_mono', 'insumo'],
                'unique_together': {('tipo_mono', 'insumo')},
            },
        ),
    ]
